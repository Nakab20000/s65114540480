version: "3.9"

services:
  db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - internal

  backend:
    build:
      context: ./salon_booking
    volumes:
      - ./salon_booking:/app
    environment:
      DATABASE_HOST: db
      DATABASE_NAME: ${POSTGRES_DB}
      DATABASE_USER: ${POSTGRES_USER}
      DATABASE_PASSWORD: ${POSTGRES_PASSWORD}
    depends_on:
      - db
    command: >
      sh -c "
        while ! nc -z db 5432; do sleep 1; done &&
        python manage.py migrate &&
        gunicorn salon_booking.wsgi:application --bind 0.0.0.0:8000 --workers 3
      "
    labels:
      - "traefik.enable=true"
      - 'traefik.http.routers.backend.rule=PathPrefix(`/s65114540480/api`)'
      - "traefik.http.routers.backend.entrypoints=web"
      - 'traefik.http.middlewares.backend-stripprefix.stripprefix.prefixes=/s65114540480/api'
      - "traefik.http.routers.backend.middlewares=backend-stripprefix"
      - "traefik.http.services.backend.loadbalancer.server.port=8000"
    networks:
      - internal
      - traefik-public

  frontend:
    build:
      context: ./salon-booking-frontend
      args: 
        PUBLIC_URL: /s65114540480
    depends_on:
      - backend
    labels:
      - "traefik.enable=true"
      - 'traefik.http.routers.frontend.rule=PathPrefix(`/s65114540480`)'
      - "traefik.http.routers.frontend.entrypoints=web"
      - 'traefik.http.middlewares.frontend-stripprefix.stripprefix.prefixes=/s65114540480'
      - "traefik.http.routers.frontend.middlewares=frontend-stripprefix"
      - "traefik.http.services.frontend.loadbalancer.server.port=80"
    networks:
      - internal
      - traefik-public

volumes:
  db_data:

networks:
  internal:
    driver: bridge
  traefik-public:
    external: true
